<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/batch https://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">

	<import resource="../database.xml" />
	<import resource="../prometheus.xml" />


	<bean id="jobRepository"
		  class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseType" value="postgres" />
	</bean>

	<bean id="jobLauncher"
		  class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<job id="footballJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="playerLoad" next="gameLoad">
			<tasklet>
				<chunk reader="playerFileItemReader" writer="playerWriter"
	                   commit-interval="20" />
			</tasklet>
		</step>
		<step id="gameLoad" next="playerSummarization">
			<tasklet>
				<chunk reader="gameFileItemReader" writer="gameWriter"
	                   commit-interval="20" />
			</tasklet>
		</step>
		<step id="playerSummarization" parent="summarizationStep" />
	</job>

	<step id="summarizationStep" xmlns="http://www.springframework.org/schema/batch">
		<tasklet>
			<chunk reader="playerSummarizationSource" writer="summaryWriter"
                   commit-interval="2" />
		</tasklet>
	</step>

	<bean id="playerWriter" class="dev.ra.springbatch.micrometer.internal.PlayerItemWriter">
		<property name="playerDao">
			<bean class="dev.ra.springbatch.micrometer.internal.JdbcPlayerDao">
				<property name="dataSource" ref="dataSource" />
			</bean>
		</property>
	</bean>

	<bean id="gameWriter" class="dev.ra.springbatch.micrometer.internal.JdbcGameDao">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="summaryWriter" class="dev.ra.springbatch.micrometer.internal.JdbcPlayerSummaryDao">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<bean id="playerFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="classpath:data/player-small1.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="#{jobParameters[names]}" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="dev.ra.springbatch.micrometer.internal.PlayerFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="gameFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:data/games-small.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id,year,team,week,opponent,completes,attempts,passingYards,passingTd,interceptions,rushes,rushYards,receptions,receptionYards,totalTd" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="dev.ra.springbatch.micrometer.internal.GameFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="playerSummarizationSource" class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="dataSource" ref="dataSource" />
		<property name="rowMapper">
			<bean class="dev.ra.springbatch.micrometer.internal.PlayerSummaryMapper" />
		</property>
		<property name="sql">
			<value>
				SELECT GAMES.player_id, GAMES.year_no, SUM(COMPLETES),
				SUM(ATTEMPTS), SUM(PASSING_YARDS), SUM(PASSING_TD),
				SUM(INTERCEPTIONS), SUM(RUSHES), SUM(RUSH_YARDS),
				SUM(RECEPTIONS), SUM(RECEPTIONS_YARDS), SUM(TOTAL_TD)
				from GAMES, PLAYERS where PLAYERS.player_id =
				GAMES.player_id group by GAMES.player_id, GAMES.year_no
			</value>
		</property>
	</bean>

</beans>